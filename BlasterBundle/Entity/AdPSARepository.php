<?php

namespace DJBlaster\BlasterBundle\Entity;

use Doctrine\ORM\EntityRepository;

use \DateTime;
/**
 * AdPSARepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdPSARepository extends EntityRepository
{
    public function findAllOrderedByNameForCustomerAndCampaign(Customer $customer, CustomerCampaign $campaign) {
        return $this->findBy(array('customer' => $customer, 'campaign'=>$campaign), array('ad_name' => 'ASC'));
    }

    public function findAllOrderedByNameForCampaign(CustomerCampaign $campaign) {
        return $this->findBy(array('campaign'=>$campaign), array('ad_name' => 'ASC'));
    }
    
    public function findOneLastRead($currentTime){
       // echo $currentTime; die;
        $currentDateTime = new DateTime();
        $currentDateTime->setTimestamp($currentTime);
        $currentDay = $currentDateTime->format('Y-m-d');
        
        $fields = array('p.psa_id, p.ad_name, p.ad_content');
        $qb = $this->createQueryBuilder('p');
        $query = $qb->select($fields)
             ->innerJoin('DJBlasterBundle:CustomerCampaign', 'c', 'WITH', 'c.campaign_id = p.campaign')
             ->where("c.start_date <= :currentDay")
             ->andWhere("c.end_date >= :currentDay")
             ->setParameters(array('currentDay'=> $currentDay))
             ->orderBy('p.last_read','ASC')
             ->setMaxResults(1)
             ->getQuery();        

        $result =  $query->getResult();
        //echo $query->getSql();var_dump($query->getParameters());die;
        return $result;
    }
}
